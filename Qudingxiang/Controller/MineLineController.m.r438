//
//  MineLineController.m
//  Qudingxiang
//
//  Created by Mac on 15/10/10.
//  Copyright © 2015年 Air. All rights reserved.
//

#import "MineLineController.h"
#import "MineModel.h"
#import "QDXGameViewController.h"
#import "MineCell.h"
#import "TabbarController.h"

@interface MineLineController ()<UITableViewDataSource,UITableViewDelegate>
{
    UITableView *_tableView;
    NSMutableArray *_dataArr;
    NSString *_myline_id;
}
@end

@implementation MineLineController

- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    [self netData];
    
}
- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    self.title = @"我的路线";
    self.view.backgroundColor = [UIColor colorWithRed:35/255 green:138/255 blue:215/255 alpha:1];
    [self createButtonBack];
    [self createUI];

    if ([_tableView respondsToSelector:@selector(setSeparatorInset:)])
    {
        [_tableView setSeparatorInset:UIEdgeInsetsZero];
    }
    if ([_tableView respondsToSelector:@selector(setLayoutMargins:)])
    {
        [_tableView setLayoutMargins:UIEdgeInsetsZero];
    }
    
}

-(void)createButtonBack
{
    UIButton *buttonBack = [UIButton buttonWithType:UIButtonTypeSystem];
    buttonBack.frame = CGRectMake(0, 0, 18, 14);
    [buttonBack addTarget:self action:@selector(buttonBackSetting) forControlEvents:UIControlEventTouchUpInside];
    [buttonBack setTitle:nil forState:UIControlStateNormal];
    [buttonBack setBackgroundImage:[UIImage imageNamed:@"sign_return"] forState:UIControlStateNormal];
    buttonBack.backgroundColor = [UIColor clearColor];
    [self.view addSubview:buttonBack];
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:buttonBack];
}

-(void)buttonBackSetting
{
    [self.sideMenuViewController setContentViewController:[[TabbarController alloc] init]
                                                 animated:YES];
    [self.sideMenuViewController hideMenuViewController];
}

- (void)loaddata
{
    [self performSelectorInBackground:@selector(netData) withObject:nil];
}

- (void)createUI
{
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, QdxWidth, QdxHeight-64) style:UITableViewStylePlain];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    
    _tableView.showsVerticalScrollIndicator = NO;
    [self.view addSubview:_tableView];

}
- (void)netData
{
    NSString *url = [NSString stringWithFormat:@"%@%@",hostUrl,mineUrl];
    NSMutableDictionary *params = [NSMutableDictionary dictionary];
    params[@"TokenKey"] = save;
    AFHTTPSessionManager *mgr = [AFHTTPSessionManager manager];
    mgr.responseSerializer = [AFJSONResponseSerializer serializer];
    [mgr POST:url parameters:params progress:^(NSProgress * _Nonnull uploadProgress) {
        
    } success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
         NSDictionary * dict = [NSDictionary dictionaryWithDictionary:responseObject];
        if (!dict[@"Code"]) {
                        NSLog(@"没有线路");
                    }else{
                        NSArray *dictData = dict[@"Msg"][@"data"];
                        if([dictData isEqual:[NSNull null]]){
                            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:@"您当前没有路线" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:@"取消", nil];
                            [alert show];
                        }else{
            
                            _dataArr = [NSMutableArray arrayWithCapacity:0];
                            for(NSDictionary *dict in dictData){
                                MineModel *model = [[MineModel alloc] init];
                                [model setValuesForKeysWithDictionary:dict];
                                [_dataArr addObject:model];
                            }
                            [_tableView reloadData];
                        }
                    }

    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        
    }];
//    [BaseService netDataBlock:^(NSMutableDictionary *dict) {
//        NSLog(@"%@",dict);
//        if (!dict[@"Code"]) {
//            NSLog(@"没有线路");
//        }else{
//            //            NSLog(@"信息%@",dict[@"Msg"]);
//            NSDictionary *dictData = dict[@"Msg"][@"data"];
//            if([dictData isEqual:[NSNull null]]){
//                UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:@"您当前没有路线" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:@"取消", nil];
//                [alert show];
//            }else{
//                
//                _dataArr = [NSMutableArray arrayWithCapacity:0];
//                for(NSDictionary *dict in dictData){
//                    MineModel *model = [[MineModel alloc] init];
//                    [model setValuesForKeysWithDictionary:dict];
//                    [_dataArr addObject:model];
//                }
//                [_tableView reloadData];
//            }
//        }
//
//    } FailBlock:^(NSMutableArray *array) {
//        
//    } andWithUrl:url andParams:params];
//    //创建请求管理对象
//    AFHTTPRequestOperationManager *mgr = [AFHTTPRequestOperationManager manager];
//    //说明服务器返回的事JSON数据
//    mgr.responseSerializer = [AFJSONResponseSerializer serializer];
//    
//    //封装请求参数
//    NSMutableDictionary *params = [NSMutableDictionary dictionary];
//    params[@"TokenKey"] = save;
//    
//    //发送请求
//    [mgr POST:[NSString stringWithFormat:@"%@%@",hostUrl,mineUrl] parameters:params success:^(AFHTTPRequestOperation *operation, id responseObject) {
//        NSString *html = operation.responseString;
//        NSData *data = [html dataUsingEncoding:NSUTF8StringEncoding];
//        id dict = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableContainers error:nil];
//        if (!dict[@"Code"]) {
//            NSLog(@"没有线路");
//        }else{
////            NSLog(@"信息%@",dict[@"Msg"]);
//        NSDictionary *dictData = dict[@"Msg"][@"data"];
//            if([dictData isEqual:[NSNull null]]){
//                UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示" message:@"您当前没有路线" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:@"取消", nil];
//                [alert show];
//            }else{
//
//        _dataArr = [NSMutableArray arrayWithCapacity:0];
//        for(NSDictionary *dict in dictData){
//            MineModel *model = [[MineModel alloc] init];
//            [model setValuesForKeysWithDictionary:dict];
//            [_dataArr addObject:model];
//        }
//        [_tableView reloadData];
//        }
//    }
//} failure:^(AFHTTPRequestOperation *operation, NSError *error) {
//        
//    }];
}

- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if ([cell respondsToSelector:@selector(setSeparatorInset:)])
    {
        [cell setSeparatorInset:UIEdgeInsetsZero];
    }
    if ([cell respondsToSelector:@selector(setLayoutMargins:)])
    {
        [cell setLayoutMargins:UIEdgeInsetsZero];
    }
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return _dataArr.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    MineCell *cell = [MineCell baseCellWithTableView:_tableView];
    cell.model = _dataArr[indexPath.row];
    cell.selectionStyle = UITableViewCellSelectionStyleNone; 
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 75;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:NO];
    QDXGameViewController *gameVC = [[QDXGameViewController alloc] init];
    gameVC.hidesBottomBarWhenPushed = YES;
    gameVC.model = _dataArr[indexPath.row];
    [self.navigationController pushViewController:gameVC animated:YES];
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


@end
